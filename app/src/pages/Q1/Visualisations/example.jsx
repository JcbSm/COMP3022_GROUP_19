import React, { useEffect, useRef } from 'react';
import * as d3 from 'd3';

const UncertaintyBarChart = () => {
  const d3Container = useRef(null);

  const data = [
    { location: 1, uncertainty_score: 0.874, uncertainty_level: 'High' },
    { location: 2, uncertainty_score: 0.522, uncertainty_level: 'Moderate' },
    { location: 3, uncertainty_score: 0.074, uncertainty_level: 'Low' },
    { location: 4, uncertainty_score: 0.369, uncertainty_level: 'Moderate' },
    { location: 5, uncertainty_score: 0.537, uncertainty_level: 'Moderate' },
    { location: 6, uncertainty_score: 0.673, uncertainty_level: 'High' },
    { location: 7, uncertainty_score: 0.801, uncertainty_level: 'High' },
    { location: 8, uncertainty_score: 0.065, uncertainty_level: 'Low' },
    { location: 9, uncertainty_score: 0.223, uncertainty_level: 'Low' },
    { location: 10, uncertainty_score: 0.379, uncertainty_level: 'Moderate' },
    { location: 11, uncertainty_score: 0.255, uncertainty_level: 'Low' },
    { location: 12, uncertainty_score: 0.262, uncertainty_level: 'Low' },
    { location: 13, uncertainty_score: 0.627, uncertainty_level: 'High' },
    { location: 14, uncertainty_score: 0.177, uncertainty_level: 'Low' },
    { location: 15, uncertainty_score: 0.511, uncertainty_level: 'Moderate' },
    { location: 16, uncertainty_score: 0.599, uncertainty_level: 'Moderate' },
    { location: 17, uncertainty_score: 0.376, uncertainty_level: 'Moderate' },
    { location: 18, uncertainty_score: 0.223, uncertainty_level: 'Low' },
    { location: 19, uncertainty_score: 0.564, uncertainty_level: 'Moderate' },
  ];

  useEffect(() => {
    const svg = d3.select(d3Container.current);
    svg.selectAll('*').remove(); // Clear existing

    const width = 1000;
    const height = 400;
    const margin = { top: 40, right: 30, bottom: 50, left: 60 };

    const x = d3
      .scaleBand()
      .domain(data.map((d) => d.location))
      .range([margin.left, width - margin.right])
      .padding(0.1);

    const y = d3
      .scaleLinear()
      .domain([0, d3.max(data, (d) => d.uncertainty_score)])
      .nice()
      .range([height - margin.bottom, margin.top]);

    const color = d3
      .scaleOrdinal()
      .domain(['Low', 'Moderate', 'High'])
      .range(['#4caf50', '#ffc107', '#f44336']);

    svg
      .append('g')
      .selectAll('rect')
      .data(data)
      .join('rect')
      .attr('x', (d) => x(d.location))
      .attr('y', (d) => y(d.uncertainty_score))
      .attr('height', (d) => y(0) - y(d.uncertainty_score))
      .attr('width', x.bandwidth())
      .attr('fill', (d) => color(d.uncertainty_level));

    svg
      .append('g')
      .attr('transform', `translate(0,${height - margin.bottom})`)
      .call(d3.axisBottom(x).tickFormat(d3.format('d')))
      .attr('font-size', '12px');

    svg
      .append('g')
      .attr('transform', `translate(${margin.left},0)`)
      .call(d3.axisLeft(y))
      .attr('font-size', '12px');

    svg
      .append('text')
      .attr('x', width / 2)
      .attr('y', margin.top / 2)
      .attr('text-anchor', 'middle')
      .style('font-size', '16px')
      .style('font-weight', 'bold')
      .text('[EXAMPLE GENERATED BY CHATGPT] Uncertainty Score by Location');
  }, []);

  return <svg ref={d3Container} width="1000" height="400" />;
};

export default UncertaintyBarChart;
